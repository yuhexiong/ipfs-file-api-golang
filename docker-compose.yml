version: '3'

networks:
  ipfs-file-api:
    driver: bridge
volumes:
  postgres_data:
    driver: local
  ipfs_data:
    driver: local

services:
  ipfs-file-api:
    container_name: ipfs-file-api
    depends_on:
      - postgres
      - ipfs
    build:
      context: ./docker
    image: ipfs-file-api
    tty: true
    ports:
      - 8080:${API_PORT}
    volumes:
      - ./:/go/src/ipfs-file-api
    environment:
      API_PORT: ${API_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      IPFS_HOST: ${IPFS_HOST}
    networks:
      - ipfs-file-api

  postgres:
    image: postgres:15.1
    restart: always
    ports:
      - "5432:5432"
    command: postgres -c log_statement=all
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - ipfs-file-api

  ipfs:
    image: ipfs/go-ipfs:latest
    restart: always
    container_name: ipfs
    volumes:
      - ./export:/export
      - ipfs_data:/data/ipfs
    ports:
      - '4001:4001'
      - '4001:4001/udp'
      - '127.0.0.1:8080:8080'
      - '127.0.0.1:5001:5001'
    networks:
      - ipfs-file-api